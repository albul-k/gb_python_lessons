"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список выводится на экран.

Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. 
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число. 
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class MyError(Exception):

    def __init__(self, txt):
        self.txt = txt


result_list = []
while True:
    _t = input(
        'Введите список значений через пробел (Для заверешения программы введите q)\n')
    inp_list = _t.split()
    con = 1
    for itm in inp_list:
        if itm == 'q':
            con = 0
            break
        try:
            if not itm.isdigit():
                raise MyError(f'<{itm}> не число!')
            result_list.append(int(itm))
        except MyError as err:
            print(err)
    if con == 0:
        break
print(result_list)
